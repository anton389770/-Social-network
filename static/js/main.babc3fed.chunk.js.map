{"version":3,"sources":["img/user.png","state/myDialogReduser.js","Сommon/utilyte/newObjectArrey.js","state/usersReduser.js","components/Profile/MyPost/MyPost.module.css","api/api.js","reportWebVitals.js","components/New/New.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Navbar/Sitebar/Sitebar.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","state/myPostReduser.js","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/Post/Post.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/ProfileContainer.jsx","state/authReduser.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","state/appReduser.js","App.js","state/sitebarReduser.js","state/redax-stor.js","index.js","img/ndqUb.gif","Сommon/Loading/Loading.js","FormControl/FormControl.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","FormControl/FormControl.jsx","FormControl/ValidationSchema.jsx","components/Navbar/Sitebar/Sitebar.module.css","components/Profile/MyPost/Post/Post.module.css","components/Header/Header.module.css","components/Navbar/Navbar.module.css"],"names":["defaultState","nameData","id","name","massegData","masseg","createDialogReduser","newMassegData","type","myDialogReduser","state","action","obj","newObjectArrey","array","indexId","index","newObject","map","u","initialUser","users","totalCount","pageSize","currentPage","isLoading","isBtnDisablet","usersFollow","userId","usersOnfollow","toggeleUsersIsLoading","toggelUsersBtnDisablet","setUsers","usersReduser","followed","page","num","filter","dispatch","a","usersApi","getUsers","data","items","followOnFollow","usersFollowOnFollow","Api","resultCode","follow","onFollow","onfollow","module","exports","instans","axios","baseURL","withCredentials","headers","get","then","response","post","delete","profileApi","getUsersProfile","getStatusUsersProfile","updateStatusUserProfile","status","put","authApi","authMe","Login","email","password","rememberMe","captcha","Loguot","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","New","Music","Settings","Sitebar","props","className","s","frendsBlock","frendFoto","img","src","Navbar","sitebarname","frendsName","f","nav","link","to","navData","isActive","active","frends","NavbarContainer","connect","sitebar","postData","massenges","like","profile","setUsersStatus","myPostReduser","objPostData","ib","text","FormPost","initialValues","onSubmit","setTextMyPost","validationSchema","component","FormCreateTexterare","MyPost","profileBlock","Post","style","postBlock","item","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","autoFocus","onBlur","e","currentTarget","value","onChange","onDoubleClick","ProfileInfo","content","profilePfoto","photos","large","usersImg","fullName","job","lookingForAJob","Loading","Profile","this","prevProps","React","Component","compose","myPostPage","login","craetePost","params","useParams","urlId","initialState","isAuth","setAuthSetUser","authReduser","authLoginProfile","dispath","Header","header","alt","scr","name_login","isAuthUserDate","onClick","authLoguotUser","HeaderComponent","HeaderContainer","LoginForm","handleSubmit","validationSchemaLogin","values","errors","placeholder","FormCreateInput","checked","disabled","message","LoginContainer","authLoginUser","messages","INITIALIZATION","initialization","appReduser","DialogsContainer","lazy","UsersContainer","App","appInitialization","fallback","path","element","ProfileContainer","app","sitebarReduser","redusers","combineReducers","dialogsPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","loadingImg","FormCreate","field","form","touched","children","restProps","textarea","yup","shape","required","min","max"],"mappings":"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","file":"static/js/main.babc3fed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.2ab39ddf.png\";","\r\nlet defaultState =  {\r\n    nameData: [\r\n    {id: 1, name: 'anton'},\r\n    {id: 2, name: 's'},\r\n    {id: 3, name: 'a'},\r\n    {id: 4, name: 'v'},\r\n    {id: 5, name: 'd'}\r\n],\r\n    massegData: [\r\n    {id: 1, masseg: 'Yo'},\r\n    {id: 2, masseg: 's'},\r\n    {id: 3, masseg: 'sr'},\r\n    {id: 4, masseg: 'as'},\r\n],\r\n}\r\nconst  myDialogReduser = (state = defaultState, action) => { \r\n    switch (action.type ){\r\n        case  \"CRAETE-MASSEG-DATA\":\r\n            let obj = {\r\n                id: 5,\r\n                masseg: action.newMassegData,\r\n            }\r\n            return {\r\n                ...state,\r\n                massegData: [...state.massegData, obj],\r\n            }\r\n        default: return  state;\r\n\r\n    }\r\n}\r\nexport const createDialogReduser = (newMassegData) => ({type:'CRAETE-MASSEG-DATA',newMassegData})\r\nexport default myDialogReduser;","\r\n\r\nexport const newObjectArrey = (array, indexId, index, newObject) => {\r\n    return array.map(u => {\r\n        if (u[index] === indexId) {\r\n            return {...u, ...newObject}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersApi} from \"../api/api\";\r\nimport {newObjectArrey} from \"../Сommon/utilyte/newObjectArrey\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst ON_FOLLOW = 'ON_FOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst TOTAL_COUNT = 'TOTAL_COUNT';\r\nconst CURRENT_PAGE = 'CURRENT_PAGE';\r\nconst TOGGEL_IS_LOADING = 'TOGGEL_IS_LOADING';\r\nconst TOGGEL_BTN_DISABLET = 'TOGGEL_BTN_DISABLET';\r\n\r\n\r\nlet initialUser = {\r\n    users: [],\r\n    totalCount: 0,\r\n    pageSize: 6,\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    isBtnDisablet: []\r\n}\r\n\r\n\r\nconst usersReduser = (state = initialUser, action) => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: newObjectArrey(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case 'ON_FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: newObjectArrey(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case 'SET_USERS' :\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        case 'CURRENT_PAGE':\r\n            return {\r\n                ...state, currentPage: action.page\r\n            }\r\n        case 'TOTAL_COUNT':\r\n            return {\r\n                ...state, totalCount: action.num\r\n            }\r\n        case 'TOGGEL_IS_LOADING':\r\n            return {\r\n                ...state, isLoading: action.isLoading\r\n            }\r\n        case 'TOGGEL_BTN_DISABLET':\r\n            return {\r\n                ...state,\r\n                isBtnDisablet: action.isLoading\r\n                    ? [...state.isBtnDisablet, action.userId]\r\n                    : state.isBtnDisablet.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\nexport const usersFollow = (userId) => ({type: FOLLOW, userId})\r\nexport const usersOnfollow = (userId) => ({type: ON_FOLLOW, userId})\r\nexport const setIsUsers = (users) => ({type: SET_USERS, users})\r\nexport const currentNamberPage = (page) => ({type: CURRENT_PAGE, page})\r\nexport const totalUsersCount = (num) => ({type: TOTAL_COUNT, num})\r\nexport const toggeleUsersIsLoading = (isLoading) => ({type: TOGGEL_IS_LOADING, isLoading})\r\nexport const toggelUsersBtnDisablet = (isLoading, userId) => ({type: TOGGEL_BTN_DISABLET, isLoading, userId})\r\n\r\nexport default usersReduser;\r\n\r\n\r\nexport const setUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggeleUsersIsLoading(true));\r\n    dispatch(currentNamberPage(currentPage));\r\n    const data = await usersApi.getUsers(currentPage, pageSize)\r\n    dispatch(toggeleUsersIsLoading(false));\r\n    dispatch(totalUsersCount(data.totalCount));\r\n    dispatch(setIsUsers(data.items))\r\n}\r\n\r\nconst followOnFollow = async (userId, dispatch, usersFollowOnFollow, Api) => {\r\n    dispatch(toggelUsersBtnDisablet(true, userId));\r\n    let data = await Api(`${userId}`, {})\r\n    if (data.resultCode === 0) {\r\n        dispatch(usersFollowOnFollow(userId));\r\n    }\r\n    dispatch(toggelUsersBtnDisablet(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    // followOnFollow(userId, dispatch, usersFollow, usersApi.follow)\r\n    dispatch(toggelUsersBtnDisablet(true, userId));\r\n    let data = await usersApi.follow(`${userId}`, {})\r\n    if (data.resultCode === 0) {\r\n        dispatch(usersFollow(userId));\r\n    }\r\n    dispatch(toggelUsersBtnDisablet(false, userId));\r\n}\r\n\r\n\r\nexport const onFollow = (userId) => async (dispatch) => {\r\n    followOnFollow(userId, dispatch, usersOnfollow, usersApi.onfollow)\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"MyPost_img__35GkN\"};","import * as axios from \"axios\";\r\n\r\nconst instans = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'addff645-1838-483e-83ed-1936adfa8e2f'\r\n    }\r\n\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instans.get(`users?page=${currentPage}&count=${pageSize}`).then((response) => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n\r\n    follow(userId) {\r\n        return instans.post(`follow/${userId}`).then((response) => {\r\n            return response.data\r\n        })\r\n    },\r\n    onfollow(userId) {\r\n        return instans.delete(`follow/${userId}`).then((response) => {\r\n            return response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const profileApi = {\r\n    getUsersProfile(userId) {\r\n        return instans.get(`profile/${userId}`).then((response) => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    getStatusUsersProfile(userId) {\r\n        return instans.get(`profile/status/${userId}`).then((response) => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    updateStatusUserProfile(status) {\r\n        return instans.put('profile/status', {\r\n            status: status\r\n        })\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n    authMe() {\r\n        return instans.get('auth/me/').then((response) => {\r\n            return response.data\r\n        })\r\n    },\r\n    Login(email, password, rememberMe = false) {\r\n        return instans.post('/auth/login', {email, password, rememberMe, captcha: false})\r\n    },\r\n    Loguot() {\r\n        return instans.delete('/auth/login')\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport s from './New.module.css'\r\n\r\n\r\nconst New = () => {\r\n    return (\r\n        <div>\r\n            New\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default New;","\r\nimport s from './Music.module.css'\r\n\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","\r\nimport s from './Settings.module.css'\r\n\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import s from './Sitebar.module.css'\r\n\r\n\r\nconst Sitebar = (props) =>{\r\n    return (\r\n        <div>\r\n            <div className={s.frendsBlock}>\r\n                <div className={s.frendFoto}>\r\n                    <img className={s.img}\r\n                         src=\"https://www.vokrug.tv/pic/person/e/e/5/4/ee54d6e76295bf9d955c93fdd9e2285a.jpeg\"/>\r\n                </div>\r\n                <p> {props.name}</p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sitebar","import s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sitebar from \"./Sitebar/Sitebar\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const sitebarname = props.frendsName.map( f => <Sitebar name={f.frendsName} /> )\r\n    return (\r\n        <nav className={s.nav}>\r\n            <ul>\r\n                <li className={s.link}>\r\n                    <NavLink to=\"/profile\"\r\n                             className={navData => navData.isActive ? s.active : s.link}>Profile</NavLink>\r\n                </li>\r\n                <li className={s.link}>\r\n                    <NavLink to=\"/dialogs\"\r\n                             className={navData => navData.isActive ? s.active : s.link}>Messanges</NavLink>\r\n                </li>\r\n                <li className={s.link}>\r\n                    <NavLink to=\"/new\"\r\n                             className={navData => navData.isActive ? s.active : s.link}>News</NavLink>\r\n                </li>\r\n                <li className={s.link}>\r\n                    <NavLink to=\"/music\"\r\n                             className={navData => navData.isActive ? s.active : s.link}>Music</NavLink>\r\n                </li>\r\n                <li className={s.link}>\r\n                    <NavLink to=\"/settings\"\r\n                             className={navData => navData.isActive ? s.active : s.link}>Settings</NavLink>\r\n                </li><li className={s.link}>\r\n                    <NavLink to=\"/users\"\r\n                             className={navData => navData.isActive ? s.active : s.link}>Users</NavLink>\r\n                </li>\r\n            </ul>\r\n            <h3>Frends</h3>\r\n            <div className={s.frends}>\r\n\r\n                {sitebarname}\r\n            </div>\r\n\r\n        </nav>\r\n\r\n\r\n    )\r\n}\r\nexport default Navbar;","import {connect} from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        frendsName: state.sitebar.sitebar.frendsName\r\n    }\r\n}\r\nconst mapDispatchToProps = () => {\r\n    return {}\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\nexport default NavbarContainer;","import {profileApi} from \"../api/api\";\r\n\r\n\r\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\r\nconst SET_USERS_STATUS = 'SET_USERS_STATUS';\r\nconst CRAETE_POST = 'CRAETE_POST';\r\n\r\nlet defaultState = {\r\n    postData: [\r\n        {id: 1, massenges: \"It first post \", like: \"   15\"},\r\n        {id: 2, massenges: \"It  pst \", like: \"   9\"},\r\n        {id: 3, massenges: \"It  post \", like: \"   8\"},\r\n        {id: 4, massenges: \"It  post \", like: \"   12\"}\r\n    ],\r\n    profile: null,\r\n    status : ''\r\n}\r\n\r\nconst myPostReduser = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case  \"CRAETE_POST\":\r\n            let objPostData = {\r\n                ib: 5,\r\n                massenges: action.text,\r\n                like: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, objPostData],\r\n            }\r\n        case 'SET_USERS_PROFILE' :\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        case 'SET_USERS_STATUS' :\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const craetePost = (text) => ({type: CRAETE_POST, text })\r\nexport const setUsersProfile = (profile) => ({type: SET_USERS_PROFILE, profile})\r\nexport const setUsersStatus = (status) => ({type: SET_USERS_STATUS, status})\r\n//export const setUsersStatus = (status) => ({type: UPDATE_USERS_STATUS, status})\r\nexport default myPostReduser;\r\n\r\nexport const getUsersProfile = (userId) => async (dispatch) => {\r\n        const data = await profileApi.getUsersProfile(userId)\r\n            dispatch(setUsersProfile(data))\r\n    }\r\n\r\nexport const getStatusUsersProfile = (userId) => async (dispatch) => {\r\n        const data = await profileApi.getStatusUsersProfile(userId)\r\n                dispatch(setUsersStatus(data))\r\n}\r\n\r\nexport const updateStatusUserProfile = (status) => async(dispatch) => {\r\n    const response = await profileApi.updateStatusUserProfile(status)\r\n            if(response.data.resultCode === 0){\r\n                dispatch(setUsersStatus(status))\r\n            }\r\n}\r\n\r\nexport const setTextMyPost = (text) => (dispatch) => {\r\n            dispatch(craetePost(text))\r\n    }\r\n","import s from \"./MyPost.module.css\"\r\nimport React from \"react\";\r\nimport {Form, Formik, Field} from \"formik\";\r\nimport {FormCreateTexterare} from \"../../../FormControl/FormControl\";\r\nimport {validationSchema} from \"../../../FormControl/ValidationSchema\";\r\n\r\n\r\nconst MyPost = (props) => {\r\n\r\n    return <div>\r\n        <div className={s.profileBlock}><h3>My post</h3>\r\n            <FormPost {...props}/>\r\n\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\nconst FormPost = (props) => {\r\n    return <div>\r\n        <Formik initialValues={{text: ''}}\r\n                onSubmit={(data) => {\r\n                    props.setTextMyPost(data.text)\r\n                }}\r\n                validationSchema={validationSchema}>\r\n            {() => (\r\n                <Form>\r\n                    <Field name=\"text\"\r\n                           component={FormCreateTexterare}/>\r\n                    <div>\r\n                        <button type=\"submit\">ADD</button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n\r\n        </Formik>\r\n    </div>\r\n\r\n}\r\n\r\nexport default MyPost;","import style from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\r\n    return <div>\r\n        {props.postData.map(s => <div key={s.id} className={style.postBlock}>\r\n                    <img className={style.img}\r\n                         src=\"https://www.vokrug.tv/pic/person/e/e/5/4/ee54d6e76295bf9d955c93fdd9e2285a.jpeg\"/>\r\n                    <div className={style.item}> {s.massenges}  </div>\r\n                    <div> like {s.like}</div>\r\n                </div>\r\n            )\r\n        }\r\n    </div>\r\n\r\n}\r\nexport default Post;\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    const notActiveEgitMode = (e) => {\r\n        props.updateStatusUserProfile(e.currentTarget.value)\r\n        setEditMode(false)\r\n    }\r\n    const activeEgitMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const changesStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    return <div>\r\n        <div>\r\n            {editMode ? <input autoFocus={true} onBlur={notActiveEgitMode}\r\n                               text={'text'} value={status}\r\n                               onChange={changesStatus}/>\r\n                : <span onDoubleClick={activeEgitMode}> {props.status || \"нет статуса\"} </span>}\r\n\r\n        </div>\r\n    </div>\r\n\r\n}\r\nexport default ProfileStatus","import style from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport Loading from \"../../../Сommon/Loading/Loading\";\r\nimport usersImg from \"../../../img/user.png\"\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Loading/>\r\n    }\r\n    return <div className={style.content}>\r\n        <div className={style.img}>\r\n        </div>\r\n        <div>\r\n            <div className={style.profilePfoto}>\r\n                <img src={props.profile.photos.large\r\n                    ? props.profile.photos.large\r\n                    : usersImg}/>\r\n            </div>\r\n            <div className={style.name}>\r\n                <span>{props.profile.fullName}</span>\r\n            </div>\r\n            <div>\r\n                <ProfileStatus status={props.status}\r\n                               updateStatusUserProfile={props.updateStatusUserProfile}/>\r\n            </div>\r\n            <div className={style.job}>\r\n                {props.profile.lookingForAJob ? 'нужна работа ' : 'не нужна работа'}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusUsersProfile,\r\n    getUsersProfile,\r\n    setTextMyPost,\r\n    updateStatusUserProfile\r\n} from \"../../state/myPostReduser\";\r\nimport MyPost from \"./MyPost/MyPost\";\r\nimport Post from \"./MyPost/Post/Post\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {useParams, Navigate} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass Profile extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.userId\r\n        this.props.getUsersProfile(userId)\r\n        this.props.getStatusUsersProfile(userId)\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.userId !== prevProps.userId) {\r\n            this.props.getUsersProfile(this.props.userId)\r\n            this.props.getStatusUsersProfile(this.props.userId)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            <ProfileInfo profile={this.props.profile} status={this.props.status}\r\n                         updateStatusUserProfile={this.props.updateStatusUserProfile}/>\r\n            <MyPost setTextMyPost={this.props.setTextMyPost}\r\n            />\r\n            <Post postData={this.props.postData}/>\r\n        </>\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.myPostPage.postData,\r\n        profile: state.myPostPage.profile,\r\n        userId: state.login.userId,\r\n        status: state.myPostPage.status\r\n    }\r\n}\r\n\r\nfunction UserIdUrl(props) {\r\n    let params = useParams();\r\n    if (!params.userId) {\r\n        if (props.userId) {\r\n            return params.userId = props.userId\r\n        } else if (!props.userId) {\r\n            return <Navigate to={\"/login\"}/>\r\n        }\r\n    }\r\n    let urlId = params.userId\r\n    return <>\r\n        <Profile  {...props} userId={urlId}/>\r\n    </>\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setTextMyPost,\r\n        updateStatusUserProfile, getUsersProfile, getStatusUsersProfile\r\n    }),\r\n)(UserIdUrl)","import {authApi} from \"../api/api\";\r\n\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst IS_LOADING = 'IS_LOADING'\r\n//const IS_AUTH = 'IS_AUTH'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isLoading: false,\r\n    isAuth: false\r\n}\r\n\r\nconst authReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case  'SET_USER_DATA' :\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: action.isAuth\r\n            }\r\n        case 'IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n        // case 'IS_AUTH':\r\n        //     return {\r\n        //         ...state,\r\n        //         isAuth: action.isAuth\r\n        //     }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthSetUser = (userId, login, email,isAuth) => ({type: SET_USER_DATA, data: {userId, login, email},isAuth})\r\nexport const isLoading = (isLoading) => ({type: IS_LOADING, isLoading})\r\n\r\n\r\nexport default authReduser;\r\n\r\nexport const authLoginProfile = () => (dispath) => {\r\n    return authApi.authMe()\r\n            .then((data) => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, email, login} = data.data;\r\n                    dispath(setAuthSetUser(id, login, email,true));\r\n                }\r\n            })\r\n    }\r\n\r\n\r\nexport const authLoginUser = (email, password, rememberMe, setStatus) => {\r\n    return (dispath) => {\r\n        authApi.Login(email, password, rememberMe).then((data) => {\r\n            if (data.data.resultCode === 0){\r\n                dispath(authLoginProfile())\r\n            }\r\n            else if (data.data.resultCode !== 0){\r\n                setStatus({message: data.data.messages[0]})\r\n            }\r\n        })\r\n    }\r\n}\r\nexport const authLoguotUser = () => async (dispath) => {debugger\r\n\r\n        await authApi.Loguot()\r\n            dispath(setAuthSetUser(null, null, null,false))\r\n\r\n\r\n}","import style from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Loading from \"../../Сommon/Loading/Loading\";\r\nimport React from \"react\";\r\nimport {authLoguotUser} from \"../../state/authReduser\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={style.header}>\r\n        <img alt='d'\r\n             scr='https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/EBay_logo.svg/1024px-EBay_logo.svg.png://v.od.ua/uploads/92/logo.png'>\r\n        </img>\r\n        <div className={style.name_login}>\r\n            {props.isAuthUserDate.isLoading ? <Loading/>\r\n                : <> {props.isAuthUserDate.login\r\n                    ? <NavLink to={`/profile/${props.isAuthUserDate.userId}`}>\r\n                         {props.isAuthUserDate.login} <button onClick={props.authLoguotUser}>Log uot</button>\r\n                      </NavLink>\r\n                    : <NavLink to={'/login'}><>Login</> </NavLink>}\r\n\r\n                </>}\r\n        </div>\r\n    </header>\r\n}\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {authLoginProfile, authLoguotUser, isLoading, setAuthSetUser} from \"../../state/authReduser\";\r\n\r\n\r\n\r\n\r\nclass HeaderComponent extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return <>\r\n            <Header {...this.props}/>\r\n        </>\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthUserDate: state.login,\r\n\r\n    }\r\n}\r\n\r\nconst HeaderContainer = connect(mapStateToProps, {setAuthSetUser,isLoading,\r\n    authLoginProfile,authLoguotUser })(HeaderComponent);\r\nexport default HeaderContainer","import {Formik, Form, Field} from 'formik';\r\nimport {connect} from \"react-redux\";\r\nimport {authLoginUser} from \"../../state/authReduser\";\r\nimport {FormCreateInput} from \"../../FormControl/FormControl\";\r\nimport {validationSchemaLogin} from \"../../FormControl/ValidationSchema\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport style from \"../../FormControl/FormControl.module.css\"\r\n\r\n\r\nconst Login = (props) => {\r\n    const handleSubmit = (data, {setStatus}) => {\r\n        let {email, password, rememberMe} = data\r\n        props.authLoginUser(email, password, rememberMe, setStatus)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Navigate to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h1>Logins</h1>\r\n        <LoginForm handleSubmit={handleSubmit}/>\r\n    </div>\r\n\r\n}\r\n\r\nconst LoginForm = (props) => {\r\n\r\n\r\n    return <div>\r\n        <Formik initialValues={{email: '', password: '', rememberMe: false}}\r\n                onSubmit={props.handleSubmit}\r\n                validationSchema={validationSchemaLogin}\r\n\r\n        >\r\n            {({values, handleSubmit, setStatus, errors, status}) => (\r\n\r\n                <Form handleSubmit={setStatus}>\r\n                    <div>\r\n                        <Field type=\"email\"\r\n                               name=\"email\"\r\n                               placeholder='Email'\r\n                               component={FormCreateInput}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Field type=\"password\"\r\n                               name=\"password\"\r\n                               placeholder='Password'\r\n                               component={FormCreateInput}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Field name=\"rememberMe\"\r\n                               type={\"checkbox\"}\r\n                               checked={values.rememberMe}/> Remember Me\r\n                    </div>\r\n                    <div>\r\n                        <button name={\"button\"}\r\n                                disabled={!(!errors.password && !errors.email)}\r\n                                type={\"submit\"}>Login\r\n                        </button>\r\n                        {status && status.message && (\r\n                            <div className={style.errors}>{status.message}</div>\r\n                        )}\r\n                    </div>\r\n                </Form>\r\n            )}\r\n\r\n        </Formik>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.login.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport const LoginContainer = connect(mapStateToProps,\r\n    {\r\n        authLoginUser\r\n    })(Login);","import {authApi} from \"../api/api\";\r\nimport {authLoginProfile} from \"./authReduser\";\r\n\r\n\r\nconst INITIALIZATION = 'INITIALIZATION';\r\n\r\n\r\nlet initialState = {\r\n    initialization: false,\r\n    isLoading: false,\r\n    isAuth: false\r\n}\r\n\r\nconst appReduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case  INITIALIZATION :\r\n            return {\r\n                ...state,\r\n                initialization: action.initialization\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const isAppInitialization = (initialization) => ({type: INITIALIZATION, initialization})\r\n//export const isAuth = (isAuth) => ({type: IS_AUTH, isAuth})\r\n\r\nexport default appReduser;\r\n\r\nexport const appInitialization = () => {\r\n    return (dispath) => {\r\n        let promise = dispath(authLoginProfile());\r\n        promise.then(() => {\r\n            dispath(isAppInitialization(true))\r\n        })\r\n    }\r\n}\r\n\r\n","import './App.css';\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport New from \"./components/New/New\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport React, { Suspense, lazy } from 'react';\nimport NavbarContainer from \"./components/Navbar/NavbarContainer\";\n// import UsersContainer from \"./components/UsersContainer/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {LoginContainer} from \"./components/Login/Login\";\nimport Loading from \"./Сommon/Loading/Loading\";\nimport {connect} from \"react-redux\";\nimport {appInitialization} from \"./state/appReduser\";\nconst DialogsContainer = lazy(() => import(\"./components/Dilalogs/DialogsContainer\"));\nconst UsersContainer = lazy(() => import(\"./components/UsersContainer/UsersContainer\"));\n\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.appInitialization()\n    }\n\n\n    render() {\n        if (!this.props.initialization) {\n            return <Loading/>\n        }\n\n        return (<BrowserRouter>\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <NavbarContainer/>\n                <div className=\"app-wrapper-content\">\n                    <Suspense fallback={<div>Загрузка...</div>}>\n                    <Routes>\n                            <Route path='profile' element={<ProfileContainer/>}/>\n                            <Route path='profile/:userId' element={<ProfileContainer/>}/>\n                            <Route path='/dialogs/*' element={<DialogsContainer/>}/>\n                            <Route path='/new' element={<New/>}/>\n                            <Route path='/music' element={<Music/>}/>\n                            <Route path='/settings' element={<Settings/>}/>\n                            <Route path='/users' element={<UsersContainer/>}/>\n                            <Route path='/login' element={<LoginContainer/>}/>\n                    </Routes>\n                    </Suspense>\n                </div>\n            </div>\n        </BrowserRouter>);\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialization: state.app.initialization\n    }\n}\n\nexport default connect(mapStateToProps, {appInitialization})(App);\n","\r\nlet defaultState = {\r\n    sitebar: {\r\n        frendsName: [\r\n            {id: 1, frendsName: 'Anton'},\r\n            {id: 2, frendsName: 'sweta'},\r\n            {id: 3, frendsName: 'An'},\r\n        ]\r\n    },\r\n}\r\n\r\nconst  sitebarReduser = (state = defaultState, action) => {\r\n\r\n    return  state;\r\n\r\n\r\n}\r\n\r\n\r\nexport default sitebarReduser;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport myDialogReduser from './myDialogReduser';\r\nimport myPostReduser from './myPostReduser';\r\nimport sitebarReduser from './sitebarReduser';\r\nimport usersReduser from './usersReduser';\r\nimport authReduser from \"./authReduser\";\r\nimport thunk from \"redux-thunk\";\r\nimport appReduser from \"./appReduser\";\r\n\r\n\r\nlet redusers = combineReducers({\r\n    dialogsPage: myDialogReduser,\r\n    myPostPage:myPostReduser,\r\n    sitebar : sitebarReduser,\r\n    users: usersReduser,\r\n    login: authReduser,\r\n    app: appReduser\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers,  composeEnhancers(applyMiddleware(thunk)));\r\n// let store = createStore(redusers,applyMiddleware(thunk));\r\n\r\nwindow.store=store;\r\n\r\nexport default store;","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\nimport store from \"./state/redax-stor\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\nreportWebVitals();","export default __webpack_public_path__ + \"static/media/ndqUb.ffcd610b.gif\";","import loadingImg from '../../img/ndqUb.gif'\r\n\r\nconst Loading = (props) => {\r\n    return <div>\r\n        <img src={loadingImg}/>\r\n    </div>\r\n}\r\nexport default Loading","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errors\":\"FormControl_errors__1Fwt5\",\"textarea\":\"FormControl_textarea__3jGGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__3rR6E\",\"profilePfoto\":\"ProfileInfo_profilePfoto__1RFkz\",\"profileBlock\":\"ProfileInfo_profileBlock__1s4ms\"};","import style from \"./FormControl.module.css\"\r\n\r\n\r\nconst FormCreate = ({field, form, ...props}) => {\r\n    const errors = form.touched[`${field.name}`] && form.errors[`${field.name}`]\r\n    return <div className={errors && style.errors}>\r\n        {props.children}\r\n        {errors && <div className={style.errors}>{form.errors[`${field.name}`]}</div>}\r\n    </div>\r\n\r\n\r\n}\r\nexport const FormCreateInput = (props) => {\r\n    const {field, form, ...restProps} = props\r\n    return <div>\r\n        <FormCreate  {...props} >\r\n            <input  {...restProps} {...field} {...form}/>\r\n        </FormCreate>\r\n    </div>\r\n}\r\nexport const FormCreateTexterare = (props) => {\r\n    const {field, form, ...restProps} = props\r\n    return <div>\r\n        <FormCreate  {...props} >\r\n            <textarea className={style.textarea} {...restProps} {...field} {...form}/>\r\n        </FormCreate>\r\n    </div>\r\n}\r\n\r\n","import * as yup from \"yup\";\r\n\r\nexport const validationSchemaLogin = yup.object().shape({\r\n    email: yup.string().email('Укажите верный email').required('Обязательное поле'),\r\n    password: yup.string().min(4,'min 4 символа ').required('Обязательное поле'),\r\n})\r\nexport const validationSchema = yup.object().shape({\r\n    text: yup.string().min(4,'min 4 символа ').max(100,'max 100 символа '),\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frendFoto\":\"Sitebar_frendFoto__tped7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__37N91\",\"img\":\"Post_img__eBtXC\",\"postBlock\":\"Post_postBlock__3lADm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__isXT3\",\"name_login\":\"Header_name_login__1sfLo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1cQJS\",\"link\":\"Navbar_link__igVj1\",\"active\":\"Navbar_active__1G74W\",\"frends\":\"Navbar_frends__pNgKy\"};"],"sourceRoot":""}